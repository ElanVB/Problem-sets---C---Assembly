   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.global	_main
  29                             	_main:
  30                             	.LFB0:
  31                             		.file 1 "../src/Prac5.c"
   1:../src/Prac5.c **** /***************************************************************/
   2:../src/Prac5.c **** /*                                                             */
   3:../src/Prac5.c **** /*      PROJECT NAME :  Prac5                                  */
   4:../src/Prac5.c **** /*      FILE         :  Prac5.c                                */
   5:../src/Prac5.c **** /*      DESCRIPTION  :  Main Program                           */
   6:../src/Prac5.c **** /*      CPU SERIES   :  RL78 - G13                             */
   7:../src/Prac5.c **** /*      CPU TYPE     :  R5F100LE                               */
   8:../src/Prac5.c **** /*                                                             */
   9:../src/Prac5.c **** /*      This file is generated by e2 studio.                   */
  10:../src/Prac5.c **** /*                                                             */
  11:../src/Prac5.c **** /***************************************************************/                                  
  12:../src/Prac5.c ****                                                                                             
  13:../src/Prac5.c ****                                                                                             
  14:../src/Prac5.c **** /************************************************************************/
  15:../src/Prac5.c **** /*    File Version: V1.00                                               */
  16:../src/Prac5.c **** /*    Date Generated: 10/09/2013                                        */
  17:../src/Prac5.c **** /************************************************************************/
  18:../src/Prac5.c **** 
  19:../src/Prac5.c **** #include "iodefine.h"
  20:../src/Prac5.c **** 
  21:../src/Prac5.c **** #ifdef CPPAPP
  22:../src/Prac5.c **** //Initialize global constructors
  23:../src/Prac5.c **** extern "C" void __main()
  24:../src/Prac5.c **** {
  25:../src/Prac5.c ****   static int initialized;
  26:../src/Prac5.c ****   if (! initialized)
  27:../src/Prac5.c ****     {
  28:../src/Prac5.c ****       typedef void (*pfunc) ();
  29:../src/Prac5.c ****       extern pfunc __ctors[];
  30:../src/Prac5.c ****       extern pfunc __ctors_end[];
  31:../src/Prac5.c ****       pfunc *p;
  32:../src/Prac5.c **** 
  33:../src/Prac5.c ****       initialized = 1;
  34:../src/Prac5.c ****       for (p = __ctors_end; p > __ctors; )
  35:../src/Prac5.c ****     (*--p) ();
  36:../src/Prac5.c **** 
  37:../src/Prac5.c ****     }
  38:../src/Prac5.c **** }
  39:../src/Prac5.c **** #endif 
  40:../src/Prac5.c **** 
  41:../src/Prac5.c **** extern void sort(char * sent);
  42:../src/Prac5.c **** extern int populate_addresses(int start, int end, char num);
  43:../src/Prac5.c **** extern int find_number(int start, int end, char num);
  44:../src/Prac5.c **** 
  45:../src/Prac5.c **** int main(void)
  46:../src/Prac5.c **** {
  32                             		.loc 1 46 0
  33                             		; start of function
  34                             		; locals: 10 bytes
  35                             		; outgoing: 6 bytes
  36 0000 20 10                   		subw	sp, #16
  37                             	.LCFI0:
  47:../src/Prac5.c ****     // TODO: add application code here
  48:../src/Prac5.c **** 	//char sent[] = "10234d457a6#4@6$786d9}1@50";
  49:../src/Prac5.c **** 	int start = 5000;
  38                             		.loc 1 49 0
  39 0002 30 88 13                		movw	ax, #5000
  40 0005 B8 0E                   		movw	[sp+14], ax
  50:../src/Prac5.c **** 	int end = 5020;
  41                             		.loc 1 50 0
  42 0007 30 9C 13                		movw	ax, #5020
  43 000a B8 0C                   		movw	[sp+12], ax
  51:../src/Prac5.c **** 	int actual = 0;
  44                             		.loc 1 51 0
  45 000c F6                      		clrw	ax
  46 000d B8 0A                   		movw	[sp+10], ax
  52:../src/Prac5.c **** 	int count = 0;
  47                             		.loc 1 52 0
  48 000f F6                      		clrw	ax
  49 0010 B8 08                   		movw	[sp+8], ax
  53:../src/Prac5.c **** 	char num = '2';
  50                             		.loc 1 53 0
  51 0012 C8 07 32                		mov	[sp+7], #50
  52                             	.L2:
  54:../src/Prac5.c **** 
  55:../src/Prac5.c ****     while (1)
  56:../src/Prac5.c ****     {
  57:../src/Prac5.c ****     	//sort(sent);
  58:../src/Prac5.c **** 
  59:../src/Prac5.c ****     	actual = populate_addresses(start, end, num);
  53                             		.loc 1 59 0 discriminator 1
  54 0015 A8 0E                   		movw	ax, [sp+14]
  55 0017 BD F0                   		movw	r8, ax
  56 0019 B8 00                   		movw	[sp], ax
  57 001b A8 0C                   		movw	ax, [sp+12]
  58 001d BD F0                   		movw	r8, ax
  59 001f B8 02                   		movw	[sp+2], ax
  60 0021 88 07                   		mov	a, [sp+7]
  61 0023 9D F0                   		mov	r8, a
  62 0025 98 04                   		mov	[sp+4], a
  63 0027 FC 00 00 00             		call	!!%code(_populate_addresses)
  64 002b AD F0                   		movw	ax, r8
  65 002d B8 0A                   		movw	[sp+10], ax
  60:../src/Prac5.c ****     	count = find_number(start, end, num);
  66                             		.loc 1 60 0 discriminator 1
  67 002f A8 0E                   		movw	ax, [sp+14]
  68 0031 BD F0                   		movw	r8, ax
  69 0033 B8 00                   		movw	[sp], ax
  70 0035 A8 0C                   		movw	ax, [sp+12]
  71 0037 BD F0                   		movw	r8, ax
  72 0039 B8 02                   		movw	[sp+2], ax
  73 003b 88 07                   		mov	a, [sp+7]
  74 003d 9D F0                   		mov	r8, a
  75 003f 98 04                   		mov	[sp+4], a
  76 0041 FC 00 00 00             		call	!!%code(_find_number)
  77 0045 AD F0                   		movw	ax, r8
  78 0047 B8 08                   		movw	[sp+8], ax
  61:../src/Prac5.c ****     }
  79                             		.loc 1 61 0 discriminator 1
  80 0049 EC 15 00 00             		br	!!.L2
  81                             	.LFE0:
 113                             	.Letext0:
